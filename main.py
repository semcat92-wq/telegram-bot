#!/usr/bin/env python3

import os
import sys
import logging
from dotenv import load_dotenv

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
try:
    import numpy as np
    import pandas as pd
    from telegram import Update
    from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫...")
print(f"üì¶ NumPy –≤–µ—Ä—Å–∏—è: {np.__version__}")
print(f"üì¶ pandas –≤–µ—Ä—Å–∏—è: {pd.__version__}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class TradingPointBot:
    def __init__(self):
        self.df = None
        self.load_data()
    
    def load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ —Å –ª–∏—Å—Ç–∞ '–°–µ–≤–µ—Ä'"""
        try:
            print("üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ '–°–µ–≤–µ—Ä'...")
            
            # –ß–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—Å—Ç '–°–µ–≤–µ—Ä'
            self.df = pd.read_excel('Test2-2.xlsx', sheet_name='–°–µ–≤–µ—Ä', engine='openpyxl')
            
            # –û—á–∏—â–∞–µ–º –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            self.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û'] = self.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û'].astype(str).str.lower().str.strip()
            
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            self.df = self.df.fillna('–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(self.df)} —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫")
            print(f"üìä –ö–æ–ª–æ–Ω–∫–∏: {list(self.df.columns)}")
            
            # –ü–æ–∫–∞–∂–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            print(f"\nüîç –ü—Ä–∏–º–µ—Ä—ã —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫:")
            for i, name in enumerate(self.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û'].head(5)):
                print(f"   {i+1}. {name.title()}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            raise
    
    def search(self, name):
        """–ü–æ–∏—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
        name = name.lower().strip()
        print(f"üîç –ò—â–µ–º: '{name}'")
        
        # –ü–æ–∏—Å–∫ –≤ –¥–∞–Ω–Ω—ã—Ö
        result = self.df[self.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û'] == name]
        
        if not result.empty:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(result)} –∑–∞–ø–∏—Å–µ–π")
            return self.format_result(result.iloc[0])
        
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ")
        return None
    
    def format_result(self, row):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
        try:
            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
            def safe_get(col):
                val = row.get(col)
                if val is None or val == '' or str(val).lower() == 'nan':
                    return '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                return str(val)
            
            result_text = f"""
üè™ *{safe_get('–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û').title()}*

üìã *–§–æ—Ä–º–∞—Ç:* {safe_get('–§–æ—Ä–º–∞—Ç')}
üè¢ *–§–∏–ª–∏–∞–ª:* {safe_get('–§–∏–ª–∏–∞–ª')}
üë®‚Äçüíº *–ú–µ–Ω–µ–¥–∂–µ—Ä:* {safe_get('–ú–µ–Ω–µ–¥–∂–µ—Ä')}
üë©‚Äçüíº *–î–§:* {safe_get('–î–§')}
üë®‚Äçüíº *–î–ì:* {safe_get('–î–ì')}
üìç *–ê–¥—Ä–µ—Å:* {safe_get('–ê–¥—Ä–µ—Å')}
üî¢ *–ü–∏–Ω:* {safe_get('–ü–∏–Ω')}
            """.strip()
            
            return result_text
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö"
    
    def get_similar_names(self, name, max_suggestions=5):
        """–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π"""
        name = name.lower()
        similar = []
        
        for store_name in self.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û']:
            if name in store_name.lower():
                similar.append(store_name.title())
        
        return list(set(similar))[:max_suggestions]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
try:
    bot = TradingPointBot()
    print("\nü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
    sys.exit(1)

async def start_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    text = """
üëã *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö*

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ *–Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞*, –∏ —è –Ω–∞–π–¥—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω—ë–º.

*–ü—Ä–∏–º–µ—Ä—ã –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞:*
‚Ä¢ –ì—É–ª—å–¥–µ–Ω
‚Ä¢ –ß–∞–ª–∫–∞
‚Ä¢ –î–∂–æ–Ω–∫–∞
‚Ä¢ –ë–∞–∫–∏–Ω–≥–µ–º
‚Ä¢ –ë—É—Ü–∏–Ω–∞
‚Ä¢ –ê–º–≥—É–Ω—å
‚Ä¢ –ê–ª–µ–∫—Å–∞–Ω–¥–µ—Ä

*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
2. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
3. –ï—Å–ª–∏ –º–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ø–æ–º–æ—â—å
/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    """
    await update.message.reply_text(text, parse_mode='Markdown')

async def help_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
*–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞*

ü§ñ *–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç:*
–ò—â–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

üîç *–ö–∞–∫ –∏—Å–∫–∞—Ç—å:*
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ —á–∞—Ç

üìù *–ü—Ä–∏–º–µ—Ä—ã –Ω–∞–∑–≤–∞–Ω–∏–π:*
‚Ä¢ –ì—É–ª—å–¥–µ–Ω
‚Ä¢ –ß–∞–ª–∫–∞
‚Ä¢ –î–∂–æ–Ω–∫–∞
‚Ä¢ –ë–∞–∫–∏–Ω–≥–µ–º

‚ö° *–ö–æ–º–∞–Ω–¥—ã:*
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è

üí° *–°–æ–≤–µ—Ç—ã:*
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    """
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def list_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è"""
    try:
        all_names = sorted([name.title() for name in bot.df['–ù–∞–∑–≤–∞–Ω–∏–µ –¢–û'].unique()])
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç Telegram
        chunk_size = 50
        chunks = [all_names[i:i + chunk_size] for i in range(0, len(all_names), chunk_size)]
        
        for i, chunk in enumerate(chunks):
            chunk_text = "\n".join([f"‚Ä¢ {name}" for name in chunk])
            message = f"üìã *–°–ø–∏—Å–æ–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ ({i+1}/{len(chunks)}):*\n\n{chunk_text}"
            await update.message.reply_text(message, parse_mode='Markdown')
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞: {e}")

async def handle_message(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_text = update.message.text.strip()
    
    if not user_text:
        await update.message.reply_text("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏")
        return
    
    # –ò—â–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Ç–æ—á–∫—É
    result = bot.search(user_text)
    
    if result:
        await update.message.reply_text(result, parse_mode='Markdown')
    else:
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—Ö–æ–∂–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        similar = bot.get_similar_names(user_text)
        
        similar_text = ""
        if similar:
            similar_text = f"\n\nüí° *–ü–æ—Ö–æ–∂–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è:*\n" + "\n".join([f"‚Ä¢ {s}" for s in similar])
        
        error_text = f"""
‚ùå *–¢–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ \"{user_text}\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞*

*–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:*
‚Ä¢ –û–ø–µ—á–∞—Ç–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ
{similar_text}

*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:*
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        """
        await update.message.reply_text(error_text, parse_mode='Markdown')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    token = os.getenv('BOT_TOKEN')
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
        application = Application.builder().token(token).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start_command))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("list", list_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("\nüéØ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üìç –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("üîó –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É /start")
        
        application.run_polling()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    main()